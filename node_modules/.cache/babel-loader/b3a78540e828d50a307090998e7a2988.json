{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\molme\\\\source\\\\repos\\\\Github\\\\Planning-Poker\\\\src\\\\main\\\\ui\\\\pages\\\\AdminRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { useParams, useHistory } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport deleteImg from \"../assets/images/delete.svg\";\nimport checkImg from \"../assets/images/check.svg\";\nimport answerImg from \"../assets/images/answer.svg\";\nimport emptyImg from \"../assets/images/empty-questions.svg\";\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Question';\nimport { RoomCode } from '../components/RoomCode';\nimport { useRoom } from '../hooks/useRoom';\nimport { database } from '../services/firebase';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function AdminRoom() {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const roomId = params.id;\n  const {\n    title,\n    questions\n  } = useRoom(roomId);\n\n  async function handleEndRoom() {\n    if (window.confirm('Tem certeza que você deseja encerrar esta sala?')) {\n      await database.ref(`rooms/${roomId}`).update({\n        endedAt: new Date()\n      });\n    }\n\n    history.push('/');\n  }\n\n  async function handleDeleteQuestion(questionId) {\n    if (window.confirm('Tem certeza que você deseja excluir esta pergunta?')) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\n    }\n  }\n\n  async function handleCheckQuestionAsAnswered(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isAnswered: true\n    });\n  }\n\n  async function handleHighlightQuestion(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isHighlighted: true\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RoomCode, {\n            code: roomId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isOutlined: true,\n            onClick: handleEndRoom,\n            children: \"Encerrar sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author,\n            isAnswered: question.isAnswered,\n            isHighlighted: question.isHighlighted,\n            children: [!question.isAnswered && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleCheckQuestionAsAnswered(question.id),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: checkImg,\n                  alt: \"Marcar pergunta como respondida\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleHighlightQuestion(question.id),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: answerImg,\n                  alt: \"Dar destaque \\xE0 pergunta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleDeleteQuestion(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: deleteImg,\n                alt: \"Remover pergunta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: emptyImg,\n          alt: \"Ilustra\\xE7\\xE3o simbolizando perguntas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Nenhuma pergunta por aqui...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Envie o c\\xF3digo desta sala para seus amigos e comece a responder perguntas!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminRoom, \"jzegP1eYD/Dzuxb8KiHa++znXtE=\", false, function () {\n  return [useHistory, useParams, useRoom];\n});\n\n_c = AdminRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoom\");","map":{"version":3,"sources":["D:/Users/molme/source/repos/Github/Planning-Poker/src/main/ui/pages/AdminRoom.tsx"],"names":["useParams","useHistory","Button","Question","RoomCode","useRoom","database","AdminRoom","history","params","roomId","id","title","questions","handleEndRoom","window","confirm","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","remove","handleCheckQuestionAsAnswered","isAnswered","handleHighlightQuestion","isHighlighted","logoImg","length","map","question","content","author","checkImg","answerImg","deleteImg","emptyImg"],"mappings":"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","sourcesContent":["import { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport deleteImg from '../assets/images/delete.svg';\r\nimport checkImg from '../assets/images/check.svg';\r\nimport answerImg from '../assets/images/answer.svg';\r\nimport emptyImg from '../assets/images/empty-questions.svg';\r\n\r\nimport { Button } from '../components/Button';\r\nimport { Question } from '../components/Question';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useRoom } from '../hooks/useRoom';\r\nimport { database } from '../services/firebase';\r\n\r\nimport '../styles/room.scss';\r\n\r\ntype RoomParams = {\r\n  id: string;\r\n}\r\n\r\nexport function AdminRoom() {\r\n  const history = useHistory();\r\n  const params = useParams<RoomParams>();\r\n  const roomId = params.id;\r\n\r\n  const { title, questions } = useRoom(roomId);\r\n\r\n  async function handleEndRoom() {\r\n    if (window.confirm('Tem certeza que você deseja encerrar esta sala?')) {\r\n      await database.ref(`rooms/${roomId}`).update({\r\n        endedAt: new Date(),\r\n      });\r\n    }\r\n\r\n    history.push('/');\r\n  }\r\n\r\n  async function handleDeleteQuestion(questionId: string) {\r\n    if (window.confirm('Tem certeza que você deseja excluir esta pergunta?')) {\r\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\r\n    }\r\n  }\r\n\r\n  async function handleCheckQuestionAsAnswered(questionId: string) {\r\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n      isAnswered: true,\r\n    });\r\n  }\r\n\r\n  async function handleHighlightQuestion(questionId: string) {\r\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n      isHighlighted: true,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-room\">\r\n      <header>\r\n        <div className=\"content\">\r\n          <img src={logoImg} alt=\"Letmeask\" />\r\n          <div>\r\n            <RoomCode code={roomId} />\r\n            <Button isOutlined onClick={handleEndRoom}>Encerrar sala</Button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"room-title\">\r\n          <h1>Sala {title}</h1>\r\n          {questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\r\n        </div>\r\n\r\n        {questions.length > 0\r\n          ? (\r\n            <div className=\"question-list\">\r\n              {questions.map(question => {\r\n                return (\r\n                  <Question\r\n                    key={question.id}\r\n                    content={question.content}\r\n                    author={question.author}\r\n                    isAnswered={question.isAnswered}\r\n                    isHighlighted={question.isHighlighted}\r\n                  >\r\n                    {!question.isAnswered && (\r\n                      <>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => handleCheckQuestionAsAnswered(question.id)}\r\n                        >\r\n                          <img src={checkImg} alt=\"Marcar pergunta como respondida\" />\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => handleHighlightQuestion(question.id)}\r\n                        >\r\n                          <img src={answerImg} alt=\"Dar destaque à pergunta\" />\r\n                        </button>\r\n                      </>\r\n                    )}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleDeleteQuestion(question.id)}\r\n                    >\r\n                      <img src={deleteImg} alt=\"Remover pergunta\" />\r\n                    </button>\r\n                  </Question>\r\n                );\r\n              })}\r\n            </div>\r\n          )\r\n          : (\r\n            <div className=\"empty-questions\">\r\n              <img src={emptyImg} alt=\"Ilustração simbolizando perguntas\" />\r\n              <h2>Nenhuma pergunta por aqui...</h2>\r\n              <p>Envie o código desta sala para seus amigos e comece a responder perguntas!</p>\r\n            </div>\r\n          )\r\n        }\r\n      </main>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}